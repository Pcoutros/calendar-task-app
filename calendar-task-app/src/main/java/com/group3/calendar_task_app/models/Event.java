/**
 * The event class models a calendar event for the application. It includes details surrounding the event 
 * such as title, date, category, location, recurrence frequency, and reminders. The location, recurrence
 * (and its frequency), and reminders are optional fields while title, date, and category are required. 
 * Date includes time. 
 * 
 * Jakarta Persistance annotations map the event to a relational database (H2)
 * 
 * References:
 * https://jakarta.ee/learn/docs/jakartaee-tutorial/current/persist/persistence-intro/persistence-intro.html
 * https://spring.io/guides/gs/accessing-data-jpa
 * https://spring.io/guides/gs/handling-form-submission
 */

package com.group3.calendar_task_app.models;

import java.time.LocalDateTime;

// Jakarta Persistence offers object/relational mapping
import jakarta.persistence.*;

@Entity
public class Event {
	
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id; 				// Autogenerated unique ID for the relational database
	
	private String title;
    private LocalDateTime date;
	private String category; 		// e.g., Work, Personal, Urgent (Freeform entry)
	private String location;		
	
    // Recurring event fields
    private boolean recurring;
    private String recurrenceType; // choices of: daily, weekly, monthly, or yearly
    private LocalDateTime recurrenceEndDate;

    // Reminder fields
    private boolean reminder;
    private LocalDateTime reminderTime;
    private boolean reminderSent;	// Flag so reminders are only sent once

	// No argument constructor is needed for Jarkarta
	public Event() {}
	
	// Getters and Setters
	
	/**
	 * Returns event ID
	 */
	public long getId() {
		return id;
	}
	
	/**
	 * Sets event ID
	 * 
	 * To be used when updating recurring events so duplicates are not produeced
	 * TECH DEBT: Likely not a good idea to be able to change the unique Identifier 
	 */
	public void setId(long id) {
		this.id = id;
	}

	/**
	 * Returns event title
	 * @return
	 */
	public String getTitle() {
		return title;
	}

	/**
	 * Sets event title
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * Returns event date (and time)
	 */
	public LocalDateTime getDate() {
		return date;
	}

	/**
	 * Sets event date (and time)
	 */
	public void setDate(LocalDateTime date) {
		this.date = date;
	}

	/**
	 * Returns event recurring flag
	 */
	public boolean isRecurring() {
		return recurring;
	}

	/**
	 * Sets event recurring flag
	 */
	public void setRecurring(boolean recurring) {
		this.recurring = recurring;
	}

	/**
	 * Returns event category
	 */
	public String getCategory() {
		return category;
	}

	/**
	 * Sets event category
	 */
	public void setCategory(String category) {
		this.category = category;
	}

	/**
	 * Returns event location
	 */
	public String getLocation() {
		return location;
	}

	/**
	 * Sets event location
	 */
	public void setLocation(String location) {
		this.location = location;
	}

	/**
	 * Returns event reminder date (and time)
	 */
	public LocalDateTime getReminderTime() {
		return reminderTime;
	}

	/**
	 * Sets event reminder date (and time)
	 */
	public void setReminderTime(LocalDateTime reminderTime) {
		this.reminderTime = reminderTime;
	}

	/**
	 * Returns event reminder flag
	 */
	public boolean isReminder() {
		return reminder;
	}

	/**
	 * Sets event reminder flag
	 */
	public void setReminder(boolean reminder) {
		this.reminder = reminder;
	}

	/**
	 * Returns event recurrence type (frequency)
	 */
	public String getRecurrenceType() {
		return recurrenceType;
	}

	/**
	 * Sets event recurrence type (frequency)
	 */
	public void setRecurrenceType(String recurrenceType) {
		this.recurrenceType = recurrenceType;
	}

	/**
	 * Returns event recurrence end date (and time)
	 */
	public LocalDateTime getRecurrenceEndDate() {
		return recurrenceEndDate;
	}

	/**
	 * Sets event recurrence end date (and time)
	 */
	public void setRecurrenceEndDate(LocalDateTime recurrenceEndDate) {
		this.recurrenceEndDate = recurrenceEndDate;
	}

	/**
	 * Returns event reminder sent flag
	 */
	public boolean isReminderSent() {
		return reminderSent;
	}

	/**
	 * Sets event reminder sent flag
	 */
	public void setReminderSent(boolean reminderSent) {
		this.reminderSent = reminderSent;
	}
	
}
